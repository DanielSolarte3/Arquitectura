#include <LiquidCrystal.h>
#include <LiquidMenu.h>
#include <Keypad.h>
#include <stdlib.h>


// Pin mapping for the display
const byte LCD_RS = 12;
const byte LCD_E = 11;
const byte LCD_D4 = 5;
const byte LCD_D5 = 4;
const byte LCD_D6 = 3;
const byte LCD_D7 = 2;
//LCD R/W pin to ground
//10K potentiometer wiper to VO

int umbralTempHigh=29;
int umbralTempLow=26;

const byte ROWS = 4; //four rows
const byte COLS = 4; //four columns
char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
byte rowPins[ROWS] = {22, 23, 24, 25}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {26, 27, 28, 29}; //connect to the column pinouts of the keypad
Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

LiquidCrystal lcd(LCD_RS, LCD_E, LCD_D4, LCD_D5, LCD_D6, LCD_D7);

//Menu 1
LiquidLine menu1_line1(0, 0, "1UmbralTempHigh");
LiquidLine menu1_line2(0, 1, "2UmbralTempLow");
LiquidScreen screen1(menu1_line1, menu1_line2);

//Menu 2
LiquidLine menu2_line1(0, 0, "2UmbralTempLow");
LiquidLine menu2_line2(0, 1, "3UmbralLuzHigh");
LiquidScreen screen2(menu2_line1, menu2_line2);

//Menu 3
LiquidLine menu3_line1(0, 0, "3UmbralLuzHigh");
LiquidLine menu3_line2(0, 1, "4UmbralLuzLow");
LiquidScreen screen3(menu3_line1, menu3_line2);

//Menu 4
LiquidLine menu4_line1(0, 0, "4UmbralLuzLow");
LiquidLine menu4_line2(0, 1, "5Reset");
LiquidScreen screen4(menu4_line1, menu4_line2);

LiquidMenu menu(lcd, screen1, screen2, screen3, screen4);

void callback_function() {
  Serial.println(F("You called the callback function."));
}

void cambiarTempHigh(){
  char temp[]="";
  int idx = 0;
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("UmbralTempHigh");
  lcd.setCursor(0,1);
  lcd.print(umbralTempHigh);
  delay(2000);
  lcd.setCursor(0,1);
  lcd.print("    ");
  while(idx<2){
    char key = keypad.getKey();
    if(key){
      lcd.setCursor(idx,1);
      lcd.print(key);
      temp[idx]=key;
      idx++;
    }
  }
  umbralTempHigh=atoi(temp);
  Serial.print(umbralTempHigh);
  delay(2000);
}

void cambiarTempLow(){
  char temp[]="";
  int idx = 0;
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("UmbralTempLow");
  lcd.setCursor(0,1);
  lcd.print(umbralTempLow);
  delay(2000);
  lcd.setCursor(0,1);
  lcd.print("    ");
  while(idx<2){
    char key = keypad.getKey();
    if(key){
      lcd.setCursor(idx,1);
      lcd.print(key);
      temp[idx]=key;
      idx++;
    }
  }
  umbralTempLow=atoi(temp);
  Serial.print(umbralTempLow);
  delay(2000);
}

void reset(){
  umbralTempHigh=29;
  umbralTempLow=26;
}

void setup() {
  Serial.begin(9600);

  lcd.begin(16, 2);

  // Here we attach the function defined earlier to four LiquidLine objects.
  menu1_line1.attach_function(1, cambiarTempHigh);
  menu1_line2.attach_function(1, cambiarTempLow);
  menu2_line1.attach_function(1, cambiarTempLow);
  menu2_line2.attach_function(1, callback_function);
  menu3_line1.attach_function(1, callback_function);
  menu3_line2.attach_function(1, callback_function);
  menu4_line1.attach_function(1, callback_function);
  menu4_line2.attach_function(1, reset);

  menu.update();

}

void loop() {
  char key=keypad.getKey();
  if(key){
    if(key=='A'){
      Serial.println("Apuntar");
      menu.switch_focus();
    }
    else if(key=='#'){
      Serial.println("Adelante");
      menu.next_screen();
      
    }else if(key=='B'){
      Serial.println("Opcion Flecha");
      menu.call_function(1);
    }else if(key=='*'){
      Serial.println("Atras");
      menu.previous_screen();
      
    }
  }
}
